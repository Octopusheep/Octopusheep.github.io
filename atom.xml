<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>octopusheep</title>
  <icon>http://octopusheep.com/icon.png</icon>
  
  <link href="http://octopusheep.com/atom.xml" rel="self"/>
  
  <link href="http://octopusheep.com/"/>
  <updated>2021-07-06T15:25:13.668Z</updated>
  <id>http://octopusheep.com/</id>
  
  <author>
    <name>octopusheep</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Trantor前后台与Spi贯通测试流程笔记</title>
    <link href="http://octopusheep.com/2021/07/07/Trantor%E5%89%8D%E5%90%8E%E5%8F%B0%E4%B8%8ESpi%E8%B4%AF%E9%80%9A%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    <id>http://octopusheep.com/2021/07/07/Trantor%E5%89%8D%E5%90%8E%E5%8F%B0%E4%B8%8ESpi%E8%B4%AF%E9%80%9A%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B%E7%AC%94%E8%AE%B0/</id>
    <published>2021-07-06T23:13:00.000Z</published>
    <updated>2021-07-06T15:25:13.668Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;预置开发环境（win-mac）&quot;&gt;&lt;a href=&quot;#预置开发环境（win-mac）&quot; class=&quot;headerlink&quot; title=&quot;预置开发环境（win/mac）&quot;&gt;&lt;/a&gt;预置开发环境（win/mac）&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;JetBrain Intellij IDEA CE 20.2-21.1版本&lt;/li&gt;
&lt;li&gt;JetBrain Pycharm&lt;/li&gt;
&lt;li&gt;JDK 1.8&lt;/li&gt;
&lt;li&gt;IDEA SG插件&lt;/li&gt;
&lt;li&gt;Postman&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上述资源需要正确配置，可以根据网上相关教程快速补齐&lt;/p&gt;
&lt;p&gt;IDEA过往版本可以在&lt;a href=&quot;https://www.jetbrains.com/idea/download/other.html&quot;&gt;IDEA历史版本下载页&lt;/a&gt;中找到&lt;/p&gt;
&lt;h2 id=&quot;预置资源文件&quot;&gt;&lt;a href=&quot;#预置资源文件&quot; class=&quot;headerlink&quot; title=&quot;预置资源文件&quot;&gt;&lt;/a&gt;预置资源文件&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;无法通过git命令clone拙远哥的qa_auto_patch的py脚本，需要在群文件中下载&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;maven仓库的xml配置文件需要在群文件中下载，文件名为&lt;code&gt;settings_quanxi.xml&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IDE的sg插件需要在群文件中下载，应对不同的IDE版本，需要安装对应的sg插件版本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sg插件的环境需要配置如下信息，以全息1为例&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;环境名： 全息1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;域名&amp;#x2F;IP：demo.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;域名&amp;#x2F;IP：demo.aliyun.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Testing" scheme="http://octopusheep.com/categories/Testing/"/>
    
    
  </entry>
  
  <entry>
    <title>Unittest自动化测试工程使用指南</title>
    <link href="http://octopusheep.com/2021/07/07/Unittest%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://octopusheep.com/2021/07/07/Unittest%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</id>
    <published>2021-07-06T23:12:55.000Z</published>
    <updated>2021-07-06T15:28:58.320Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;项目主要依赖&quot;&gt;&lt;a href=&quot;#项目主要依赖&quot; class=&quot;headerlink&quot; title=&quot;项目主要依赖&quot;&gt;&lt;/a&gt;项目主要依赖&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;基于unittest测试框架组织测试用例&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于selenium操纵浏览器对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于poium库简化DOM元素查询&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于yagmail库实现测试报告邮件发送&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;尚未实现的功能点-优化点&quot;&gt;&lt;a href=&quot;#尚未实现的功能点-优化点&quot; class=&quot;headerlink&quot; title=&quot;尚未实现的功能点/优化点&quot;&gt;&lt;/a&gt;尚未实现的功能点/优化点&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;测试报告和对应的测试截图需要输出到同一文件夹&lt;/p&gt;
&lt;p&gt; 建议在test_report中给每个测试报告建立文件夹&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;断言元素存在的方法可以封装成公共模块&lt;/p&gt;</summary>
    
    
    
    <category term="Testing" scheme="http://octopusheep.com/categories/Testing/"/>
    
    
    <category term="Selenium" scheme="http://octopusheep.com/tags/Selenium/"/>
    
    <category term="Unittest" scheme="http://octopusheep.com/tags/Unittest/"/>
    
  </entry>
  
  <entry>
    <title>Unittest自动化测试工程分析</title>
    <link href="http://octopusheep.com/2021/07/07/Unittest%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%88%86%E6%9E%90/"/>
    <id>http://octopusheep.com/2021/07/07/Unittest%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%88%86%E6%9E%90/</id>
    <published>2021-07-06T23:12:50.000Z</published>
    <updated>2021-07-06T15:20:45.227Z</updated>
    
    
    <summary type="html">&lt;p&gt;在系统地学习了自动化web测试相关知识，详细阅读了虫师的《Selenium3自动化测试实战——基于Python语言》一书及相关工程实践后，我尝试分析了现阶段公司的自动化测试项目，并对工程框架优缺点提出例证，最后我尝试重构了该项目并重写了其中一条测试用例。&lt;/p&gt;
&lt;h2 id=&quot;原Airtest工程分析&quot;&gt;&lt;a href=&quot;#原Airtest工程分析&quot; class=&quot;headerlink&quot; title=&quot;原Airtest工程分析&quot;&gt;&lt;/a&gt;原Airtest工程分析&lt;/h2&gt;&lt;p&gt;当前工程目录如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;launch目录中放置全局启动参数，在此处设置全局SetUp和TearDown操作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;msc_case目录下放置自动化测试用例，采用线性测试方式执行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;log目录下存放各用例调用webdriver产生的截图和airtest的日志文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;file_bat目录存放写入了python脚本的windows批处理命令文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;html为airtest生成的前端界面模板&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;├─file_bat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├─html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├─launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├─log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  └─log_env&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└─msc_case&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    └─collection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        └─test_security.air&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Testing" scheme="http://octopusheep.com/categories/Testing/"/>
    
    
    <category term="Selenium" scheme="http://octopusheep.com/tags/Selenium/"/>
    
    <category term="Unittest" scheme="http://octopusheep.com/tags/Unittest/"/>
    
  </entry>
  
  <entry>
    <title>Unittest测试框架学习笔记</title>
    <link href="http://octopusheep.com/2021/06/25/Unittest%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://octopusheep.com/2021/06/25/Unittest%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2021-06-24T16:01:36.000Z</published>
    <updated>2021-06-24T08:04:43.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;自动化测试的一些基本概念&quot;&gt;&lt;a href=&quot;#自动化测试的一些基本概念&quot; class=&quot;headerlink&quot; title=&quot;自动化测试的一些基本概念&quot;&gt;&lt;/a&gt;自动化测试的一些基本概念&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;库&lt;/p&gt;
&lt;p&gt; 库的英文单词是 Library，库是由代码集合成的一个产品，可供程序员调用。面向对象的代码组织形成的库叫类库，面向过程的代码组织形成的库叫函数库。WebDriver就属于库的范畴，因为它提供了一组操作 Web 页面的类与方法，所以可以称它为 Web 自动化测试库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;框架&lt;/p&gt;
&lt;p&gt; 框架的英文单词是 Framework，框架是为解决一个或一类问题而开发的产品，用户一般只需使用框架提供的类或函数，即可实现全部功能。从这个角度看，Unittest框架主要用于测试用例的组织和执行，以及测试结果的生成。因为它的主要任务就是帮助我们完成测试工作，所以通常称它为测试框架&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;工具&lt;/p&gt;
&lt;p&gt; 工具的英文单词是 Tools，工具与框架所做的事情类似，只是工具提供了更高层次的封装，屏蔽了底层的代码，提供了单独的操作界面供用户使用。例如，UFT（QTP）、Katalon就属于自动化测试工具&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Testing" scheme="http://octopusheep.com/categories/Testing/"/>
    
    
    <category term="Unittest" scheme="http://octopusheep.com/tags/Unittest/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot学习笔记</title>
    <link href="http://octopusheep.com/2021/06/24/SpringBoot%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://octopusheep.com/2021/06/24/SpringBoot%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2021-06-23T20:07:03.000Z</published>
    <updated>2021-06-25T06:38:47.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;预置条件&quot;&gt;&lt;a href=&quot;#预置条件&quot; class=&quot;headerlink&quot; title=&quot;预置条件&quot;&gt;&lt;/a&gt;预置条件&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;- JetBrain Intellij IDEA Ultimate版本(20.2)

只有Ultimate版本的IDE才可以创建Spring Initiatizer项目，如果你当前IDE为社区版，需要自行更换&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;创建步骤&quot;&gt;&lt;a href=&quot;#创建步骤&quot; class=&quot;headerlink&quot; title=&quot;创建步骤&quot;&gt;&lt;/a&gt;创建步骤&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1. 创建Spring Initiatizer项目（jdk版本选择1.8）

2. 配置项目参数

    - groupid会影响package中的包名
    - artfactid会影响name和package中的包名

3. 选择项目依赖

    - Web
        - Spring Web
    - SQL
        - MyBatis
        - MySQL

4. 设置项目名称和存放地址&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://octopusheep.com/categories/Programming/"/>
    
    
    <category term="SpringBoot" scheme="http://octopusheep.com/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>解决windows环境下Postman转译curl命令无法执行的issue</title>
    <link href="http://octopusheep.com/2021/06/24/%E8%A7%A3%E5%86%B3windows%E7%8E%AF%E5%A2%83%E4%B8%8BPostman%E8%BD%AC%E8%AF%91curl%E5%91%BD%E4%BB%A4%E6%97%A0%E6%B3%95%E6%89%A7%E8%A1%8C%E7%9A%84issue/"/>
    <id>http://octopusheep.com/2021/06/24/%E8%A7%A3%E5%86%B3windows%E7%8E%AF%E5%A2%83%E4%B8%8BPostman%E8%BD%AC%E8%AF%91curl%E5%91%BD%E4%BB%A4%E6%97%A0%E6%B3%95%E6%89%A7%E8%A1%8C%E7%9A%84issue/</id>
    <published>2021-06-23T20:06:58.000Z</published>
    <updated>2021-06-23T12:25:23.924Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;问题背景&quot;&gt;&lt;a href=&quot;#问题背景&quot; class=&quot;headerlink&quot; title=&quot;问题背景&quot;&gt;&lt;/a&gt;问题背景&lt;/h2&gt;&lt;p&gt;了解到部分客户环境存在物理机性能较弱或内网环境无法连接外网等问题，导致无法使用postman，需要将postman请求转义为cURL命令，放在终端中执行&lt;/p&gt;
&lt;p&gt;由于windows环境存在对于postman导出格式不兼容的问题，特此文档说明&lt;/p&gt;
&lt;h3 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;进入postman,使用code snippet将对应请求转义为cURL请求&lt;/p&gt;
&lt;p&gt; 需要注意如下几个参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Generate multiline snippet [Y]&lt;/p&gt;
&lt;p&gt;  该参数将cURL命令分割为多行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use long form options [Y]&lt;/p&gt;
&lt;p&gt;  该参数开启时使用全称参数代替简写，开不开启都可以&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Line continuation character [^]&lt;/p&gt;
&lt;p&gt;  该参数选择换行连续符号，windows环境选择&lt;code&gt;^&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Quote Type [“]&lt;/p&gt;
&lt;p&gt;  windows环境下，引用参数部分须使用双引号，参数内双引号需要使用&lt;code&gt;/&lt;/code&gt;转义符&lt;/p&gt;</summary>
    
    
    
    <category term="Testing" scheme="http://octopusheep.com/categories/Testing/"/>
    
    
    <category term="Postman" scheme="http://octopusheep.com/tags/Postman/"/>
    
  </entry>
  
  <entry>
    <title>AirTest学习笔记</title>
    <link href="http://octopusheep.com/2021/06/16/AirTest%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://octopusheep.com/2021/06/16/AirTest%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2021-06-15T19:55:06.000Z</published>
    <updated>2021-06-23T12:24:37.810Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;what-is-AirTest&quot;&gt;&lt;a href=&quot;#what-is-AirTest&quot; class=&quot;headerlink&quot; title=&quot;what is AirTest&quot;&gt;&lt;/a&gt;what is AirTest&lt;/h3&gt;&lt;p&gt; 李元哥分享的教程里提到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AirTest自动化测试框架基于Selenium和python语言，通过调用Chrome浏览器Devtools Protocol协议，将用户操作解析成python脚本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我理解主要是通过AirTest库，可以提供以下能力：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;通过Chrome浏览器的Devtools协议，录制用户操作&lt;/p&gt;
&lt;p&gt; 通过将用户操作转换成符合Airtest库调用链的方法，完成操作记录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AirTest库中的调用链方法获取Selenium的WebDriver实例，操纵浏览器&lt;/p&gt;
&lt;p&gt; 将第一部中的录制脚本通过Sellenium-Airtest转换为Selenium的WebDriver实例可以执行的方法，即可完成UI自动化步骤&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;总体来说AirTest在脚本录制方面比较方便，另外在自动化测试结束后生成的报告有多种模版可以选择。&lt;/p&gt;
&lt;p&gt;  但最后AirTest依旧是依赖Selenium的核心组件WebDriver去控制浏览器操纵DOM节点实现&lt;/p&gt;</summary>
    
    
    
    <category term="Testing" scheme="http://octopusheep.com/categories/Testing/"/>
    
    
    <category term="AirTest" scheme="http://octopusheep.com/tags/AirTest/"/>
    
  </entry>
  
  <entry>
    <title>Selenium学习笔记</title>
    <link href="http://octopusheep.com/2021/06/10/Selenium%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://octopusheep.com/2021/06/10/Selenium%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2021-06-10T11:07:30.000Z</published>
    <updated>2021-06-23T12:24:58.911Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;what-is-Selenium&quot;&gt;&lt;a href=&quot;#what-is-Selenium&quot; class=&quot;headerlink&quot; title=&quot;what is Selenium&quot;&gt;&lt;/a&gt;what is Selenium&lt;/h3&gt;&lt;p&gt;引用官方的话&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Selenium is an umbrella project for a range of tools and libraries that enable and support the automation of web browsers.It provides extensions to emulate user interaction with browsers, a distribution server for scaling browser allocation, and the infrastructure for implementations of the W3C WebDriver specification that lets you write interchangeable code for all major web browsers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基本就是说：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Selenium是一个包含了各种工具和库的项目，用来实现浏览器的自动化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;它提供一些插件，用以实现在浏览器中模拟用户操作&lt;/p&gt;</summary>
    
    
    
    <category term="Testing" scheme="http://octopusheep.com/categories/Testing/"/>
    
    
    <category term="Selenium" scheme="http://octopusheep.com/tags/Selenium/"/>
    
  </entry>
  
  <entry>
    <title>《how does the Internet work》自译</title>
    <link href="http://octopusheep.com/2021/02/23/%E3%80%8Ahow%20does%20the%20Internet%20work%E3%80%8B%E8%87%AA%E8%AF%91/"/>
    <id>http://octopusheep.com/2021/02/23/%E3%80%8Ahow%20does%20the%20Internet%20work%E3%80%8B%E8%87%AA%E8%AF%91/</id>
    <published>2021-02-23T01:32:08.000Z</published>
    <updated>2021-02-22T19:56:03.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文由octopusheep人工翻译，并未使用任何翻译软件，请放心食用。&lt;/p&gt;
&lt;h2 id=&quot;Origin-Text&quot;&gt;&lt;a href=&quot;#Origin-Text&quot; class=&quot;headerlink&quot; title=&quot;Origin Text&quot;&gt;&lt;/a&gt;Origin Text&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://web.stanford.edu/class/msande91si/www-spr04/readings/week1/InternetWhitepaper.html&quot;&gt;How Does the Internet work?&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Before-Reading&quot;&gt;&lt;a href=&quot;#Before-Reading&quot; class=&quot;headerlink&quot; title=&quot;Before Reading&quot;&gt;&lt;/a&gt;Before Reading&lt;/h2&gt;&lt;p&gt;该篇文章由Rus Shuler于1998年完成，并在2002年更新文章内容，浅析了互联网（Internet）的工作原理，我认为是一篇极其优秀的科普文章，从tcp/ip协议族的抽象层面和硬件层面（Protocol Stack）以及基础设施层面（Infrastructure）梳理了数据在互联网上的流动，并生动的给出了图示用于讲解互联网的硬件设施以及常用应用层协议数据传输过程。&lt;/p&gt;
&lt;p&gt;这篇文章贼鸡儿棒，比大学时计算机网络的老师讲的强多了，这也是我翻译这篇文章的初衷。比起枯燥敷衍的说一遍OSI七层网络模型，听的人云里雾里,不如像这篇文章里分四层，从每一层的作用入手，配合ping、routetrace等工具详细讲解，这样网络的概念理解起来才会容易。能否把知识以别人能够听懂、能够理解的方式传授出去，我觉得是我们这个时代教育里极其欠缺的。&lt;/p&gt;
&lt;h2 id=&quot;Acronym&quot;&gt;&lt;a href=&quot;#Acronym&quot; class=&quot;headerlink&quot; title=&quot;Acronym&quot;&gt;&lt;/a&gt;Acronym&lt;/h2&gt;&lt;p&gt;Internet 互联网&lt;br&gt;Protocol Stack 协议族&lt;/p&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://octopusheep.com/categories/Programming/"/>
    
    
    <category term="Internet" scheme="http://octopusheep.com/tags/Internet/"/>
    
  </entry>
  
  <entry>
    <title>RESTful风格API初探</title>
    <link href="http://octopusheep.com/2020/12/05/RESTful%E9%A3%8E%E6%A0%BCAPI%E5%88%9D%E6%8E%A2/"/>
    <id>http://octopusheep.com/2020/12/05/RESTful%E9%A3%8E%E6%A0%BCAPI%E5%88%9D%E6%8E%A2/</id>
    <published>2020-12-04T22:26:36.000Z</published>
    <updated>2020-12-04T14:39:45.690Z</updated>
    
    
    <summary type="html">&lt;p&gt;设计RESTful风格的API需要遵守以下三个原则&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;资源用URL来定位&lt;/li&gt;
&lt;li&gt;不同类型的操作用不同的Method&lt;/li&gt;
&lt;li&gt;返回码必须严格遵守HTTP协议规定的返回码&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;请求处理逻辑&quot;&gt;&lt;a href=&quot;#请求处理逻辑&quot; class=&quot;headerlink&quot; title=&quot;请求处理逻辑&quot;&gt;&lt;/a&gt;请求处理逻辑&lt;/h2&gt;&lt;p&gt;当端口捕获请求后，按以下顺序执行：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;handler -&amp;gt; validation{1.request 2.user} -&amp;gt; business logic -&amp;gt; response&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;端口捕获请求交给handlers，根据请求不同进入不同的handler&lt;/li&gt;
&lt;li&gt;handler中处理函数先进行validation，包括&lt;ul&gt;
&lt;li&gt;请求是否合法&lt;/li&gt;
&lt;li&gt;当前用户是否合法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;业务逻辑执行&lt;/li&gt;
&lt;li&gt;返回结果</summary>
    
    
    
    <category term="Programming" scheme="http://octopusheep.com/categories/Programming/"/>
    
    
  </entry>
  
  <entry>
    <title>Go语言快速实现WebServer</title>
    <link href="http://octopusheep.com/2020/12/05/Go%E8%AF%AD%E8%A8%80%E5%BF%AB%E9%80%9F%E5%AE%9E%E7%8E%B0WebServer/"/>
    <id>http://octopusheep.com/2020/12/05/Go%E8%AF%AD%E8%A8%80%E5%BF%AB%E9%80%9F%E5%AE%9E%E7%8E%B0WebServer/</id>
    <published>2020-12-04T20:28:25.000Z</published>
    <updated>2020-12-04T12:40:46.765Z</updated>
    
    
    <summary type="html">&lt;p&gt;Go语言的&lt;code&gt;bulid-in库&lt;/code&gt;异常强大，其中&lt;code&gt;net/http&lt;/code&gt;库包括了端口监听和请求处理的功能，基于以上特性我们用Go来实现一个简单的WebServer&lt;/p&gt;
&lt;h2 id=&quot;所需库类型&quot;&gt;&lt;a href=&quot;#所需库类型&quot; class=&quot;headerlink&quot; title=&quot;所需库类型&quot;&gt;&lt;/a&gt;所需库类型&lt;/h2&gt;&lt;p&gt;涉及网络请求必定有IO操作和http协议，因此需要用到以下两个库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;io&lt;/li&gt;
&lt;li&gt;net/http&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;代码实现&quot;&gt;&lt;a href=&quot;#代码实现&quot; class=&quot;headerlink&quot; title=&quot;代码实现&quot;&gt;&lt;/a&gt;代码实现&lt;/h2&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&amp;quot;io&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&amp;quot;net/http&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;firstPage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(w http.ResponseWriter,r *http.Request)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	io.WriteString(w,&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;h1&amp;gt;Hello, this is my first page!&amp;lt;/h1&amp;gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	http.HandleFunc(&lt;span class=&quot;string&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;,firstPage)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	http.ListenAndServe(&lt;span class=&quot;string&quot;&gt;&amp;quot;:8000&amp;quot;&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://octopusheep.com/categories/Programming/"/>
    
    <category term="Go" scheme="http://octopusheep.com/categories/Programming/Go/"/>
    
    
    <category term="Go" scheme="http://octopusheep.com/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Go语言常用工具链浅析</title>
    <link href="http://octopusheep.com/2020/12/04/Go%E8%AF%AD%E8%A8%80%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E9%93%BE%E6%B5%85%E6%9E%90/"/>
    <id>http://octopusheep.com/2020/12/04/Go%E8%AF%AD%E8%A8%80%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E9%93%BE%E6%B5%85%E6%9E%90/</id>
    <published>2020-12-03T20:41:23.000Z</published>
    <updated>2020-12-04T12:45:56.969Z</updated>
    
    
    <summary type="html">&lt;p&gt;Go语言的build-in工具链异常强大，我简单总结一下test和benchmark的用法&lt;/p&gt;
&lt;h2 id=&quot;go-test&quot;&gt;&lt;a href=&quot;#go-test&quot; class=&quot;headerlink&quot; title=&quot;go test&quot;&gt;&lt;/a&gt;go test&lt;/h2&gt;&lt;p&gt;test用于测试代码，需要遵从以下几点原则&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;测试文件命名&lt;code&gt;XXX_test.go&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试文件需要&lt;code&gt;import testing&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试函数命名&lt;code&gt;TestXXX&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试函数入参&lt;code&gt;t *testing.T&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;函数打印错误信息&lt;code&gt;t.Errorf(“message”)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试函数如需跳过，可使用&lt;code&gt;t.SkipNow()&lt;/code&gt;且必须放在测试函数第一行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;t.Run来执行subtest控制test输出和test顺序&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;T.Run(“a1”,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(t *testing.T)&lt;/span&gt;&lt;/span&gt;&amp;#123;fmt.Println(“a1”)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;T.Run(“a2”,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(t *testing.T)&lt;/span&gt;&lt;/span&gt;&amp;#123;fmt.Println(“a2”)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;T.Run(“a3”,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(t *testing.T)&lt;/span&gt;&lt;/span&gt;&amp;#123;fmt.Println(“a3”)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://octopusheep.com/categories/Programming/"/>
    
    <category term="Go" scheme="http://octopusheep.com/categories/Programming/Go/"/>
    
    
    <category term="Go" scheme="http://octopusheep.com/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>再谈Go语言指针</title>
    <link href="http://octopusheep.com/2020/12/02/%E5%86%8D%E8%B0%88Go%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/"/>
    <id>http://octopusheep.com/2020/12/02/%E5%86%8D%E8%B0%88Go%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/</id>
    <published>2020-12-01T18:51:04.000Z</published>
    <updated>2020-12-04T12:46:01.683Z</updated>
    
    
    <summary type="html">&lt;p&gt;之前总结了关于Go语言指针基本概念和引用传递中指针的运用，此次再来谈下运用指针来改变结构体类型的属性&lt;/p&gt;
&lt;h2 id=&quot;什么是方法&quot;&gt;&lt;a href=&quot;#什么是方法&quot; class=&quot;headerlink&quot; title=&quot;什么是方法&quot;&gt;&lt;/a&gt;什么是方法&lt;/h2&gt;&lt;p&gt;对于Java等OOP语言，方法的实现时通过编译器隐式的加一个this指针，该指针调用函数达到类似面向对象的作用。而Go没有OOP，所以这个this指针需要明确的申明出来，实际上和其他面向对象语言没什么区别&lt;/p&gt;
&lt;p&gt;方法定义如下：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(variable_name variable_data_type)&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;function_name&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; [&lt;span class=&quot;title&quot;&gt;return_type&lt;/span&gt;]&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;/* 函数体*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://octopusheep.com/categories/Programming/"/>
    
    <category term="Go" scheme="http://octopusheep.com/categories/Programming/Go/"/>
    
    
    <category term="Go" scheme="http://octopusheep.com/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Go语言函数参数传递方式浅析</title>
    <link href="http://octopusheep.com/2020/12/01/Go%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%96%B9%E5%BC%8F%E6%B5%85%E6%9E%90/"/>
    <id>http://octopusheep.com/2020/12/01/Go%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%96%B9%E5%BC%8F%E6%B5%85%E6%9E%90/</id>
    <published>2020-12-01T02:22:03.000Z</published>
    <updated>2020-12-04T12:46:06.560Z</updated>
    
    
    <summary type="html">&lt;p&gt;首先来谈一下我对&lt;code&gt;实际参数&lt;/code&gt;和&lt;code&gt;形式参数&lt;/code&gt;的理解&lt;/p&gt;
&lt;h2 id=&quot;什么是实际参数&quot;&gt;&lt;a href=&quot;#什么是实际参数&quot; class=&quot;headerlink&quot; title=&quot;什么是实际参数&quot;&gt;&lt;/a&gt;什么是实际参数&lt;/h2&gt;&lt;p&gt;我们定义一个有参数的函数如下&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; =&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	param(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//函数的statement&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在&lt;code&gt;main()&lt;/code&gt;中传递给&lt;code&gt;param()&lt;/code&gt;的参数&lt;code&gt;a&lt;/code&gt;是&lt;code&gt;param()&lt;/code&gt;的实际参数，实际参数的概念独立于函数定义，是在函数使用的地方传递给函数的外部定义的变量&lt;/p&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://octopusheep.com/categories/Programming/"/>
    
    <category term="Go" scheme="http://octopusheep.com/categories/Programming/Go/"/>
    
    
    <category term="Go" scheme="http://octopusheep.com/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Go语言实现质数查询</title>
    <link href="http://octopusheep.com/2020/11/30/Go%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E8%B4%A8%E6%95%B0%E6%9F%A5%E8%AF%A2/"/>
    <id>http://octopusheep.com/2020/11/30/Go%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E8%B4%A8%E6%95%B0%E6%9F%A5%E8%AF%A2/</id>
    <published>2020-11-29T19:17:14.000Z</published>
    <updated>2020-12-04T12:46:13.451Z</updated>
    
    
    <summary type="html">&lt;p&gt;根据&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%B4%A8%E6%95%B0&quot;&gt;维基百科&lt;/a&gt;对质数的定义&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;素数（Prime number），又称素数，指在大于1的自然数中，除了1和该数自身外，无法被其他自然数整除的数（也可定义为只有1与该数本身两个正因数的数）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;处理思路&quot;&gt;&lt;a href=&quot;#处理思路&quot; class=&quot;headerlink&quot; title=&quot;处理思路&quot;&gt;&lt;/a&gt;处理思路&lt;/h2&gt;&lt;p&gt;如何用Go语言实现100以内质数的搜寻，首先需要理清思路&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要遍历2-100所有的整数，自然需要用到田条件语句for循环&lt;/li&gt;
&lt;li&gt;使用穷举法遍历所有小于该整数的数与其取余，判断是否为质数，需要使用条件判断if选择&lt;/li&gt;
&lt;li&gt;使用fmt.Println输出素数&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Step-to-Step&quot;&gt;&lt;a href=&quot;#Step-to-Step&quot; class=&quot;headerlink&quot; title=&quot;Step to Step&quot;&gt;&lt;/a&gt;Step to Step&lt;/h2&gt;&lt;p&gt;首先创建for循环&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; count &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	count=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; count&amp;lt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		count++ &lt;span class=&quot;comment&quot;&gt;//需要从2开始判断，并且每次执行完后自增&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//此处代码判断并fmt输出质数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://octopusheep.com/categories/Programming/"/>
    
    <category term="Go" scheme="http://octopusheep.com/categories/Programming/Go/"/>
    
    
    <category term="Go" scheme="http://octopusheep.com/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Go语言中的指针浅析</title>
    <link href="http://octopusheep.com/2020/11/29/Go%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E6%8C%87%E9%92%88%E6%B5%85%E6%9E%90/"/>
    <id>http://octopusheep.com/2020/11/29/Go%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E6%8C%87%E9%92%88%E6%B5%85%E6%9E%90/</id>
    <published>2020-11-29T11:03:11.000Z</published>
    <updated>2020-12-04T12:46:18.008Z</updated>
    
    
    <summary type="html">&lt;p&gt;由基础的Go数据类型我们知道Go语言中包含类型指针&lt;code&gt;*Type&lt;/code&gt;,但很多情况下，我们对&lt;code&gt;*Type&lt;/code&gt;、&lt;code&gt;&amp;amp;var&lt;/code&gt;、&lt;code&gt;*ptr&lt;/code&gt;感到困惑，因为三者经常放在一起使用，我总结一下我的看法&lt;/p&gt;
&lt;h2 id=&quot;什么是-Type&quot;&gt;&lt;a href=&quot;#什么是-Type&quot; class=&quot;headerlink&quot; title=&quot;什么是*Type&quot;&gt;&lt;/a&gt;什么是&lt;code&gt;*Type&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;*Type&lt;/code&gt;用于定义类型指针变量，只在定义指针时出现&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// *Type用于定义函数指针，只在定义时出现 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ptr *&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//定义全局变量类型指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ptr *&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//定义局部变量类型指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://octopusheep.com/categories/Programming/"/>
    
    <category term="Go" scheme="http://octopusheep.com/categories/Programming/Go/"/>
    
    
    <category term="Go" scheme="http://octopusheep.com/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>NodeJs文件表溢出异常处理指南</title>
    <link href="http://octopusheep.com/2020/10/26/NodeJs%E6%96%87%E4%BB%B6%E8%A1%A8%E6%BA%A2%E5%87%BA%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%8C%87%E5%8D%97/"/>
    <id>http://octopusheep.com/2020/10/26/NodeJs%E6%96%87%E4%BB%B6%E8%A1%A8%E6%BA%A2%E5%87%BA%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%8C%87%E5%8D%97/</id>
    <published>2020-10-25T22:13:38.000Z</published>
    <updated>2020-12-01T11:21:38.334Z</updated>
    
    
    <summary type="html">&lt;p&gt;使用&lt;code&gt;hexo g&lt;/code&gt;生成大量博客文件时(数量超过2W条)会遇到&lt;code&gt;Error: ENFILE: file table overflow&lt;/code&gt;问题，即文件表溢出&lt;/p&gt;
&lt;h2 id=&quot;产生原因&quot;&gt;&lt;a href=&quot;#产生原因&quot; class=&quot;headerlink&quot; title=&quot;产生原因&quot;&gt;&lt;/a&gt;产生原因&lt;/h2&gt;&lt;p&gt;文件打开太多了，超过了macOS操作系统的限制&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;https://github.com/meteor/meteor/issues/8057&quot;&gt;Gituhub&lt;/a&gt;上可以查看到相关issue&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’m glad this is solving it for everyone. Unfortunately, Apple sets ridiculously low limits by default which might be good for some users, but is awful for developers.&lt;br&gt;For what it’s worth, I would recommend setting the limit much much higher than 65536 (524288 is great).&lt;br&gt;Additionally, I would recommend using a method that doesn’t modify /etc/ files directly since throughout the years Apple has randomly decided to stop loading these files (for example, it used to be a common recommendation to put this in /etc/launchd.conf, but that no longer works in Yosemite).&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://octopusheep.com/categories/Programming/"/>
    
    
  </entry>
  
  <entry>
    <title>ClashX使用指南</title>
    <link href="http://octopusheep.com/2020/10/26/ClashX%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://octopusheep.com/2020/10/26/ClashX%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</id>
    <published>2020-10-25T20:04:58.000Z</published>
    <updated>2020-10-25T12:14:27.919Z</updated>
    
    
    <summary type="html">&lt;p&gt;ClashX界面美观功能强大，支持vmess、shadowsocks、trojan等多种协议&lt;/p&gt;
&lt;h1 id=&quot;下载ClashX&quot;&gt;&lt;a href=&quot;#下载ClashX&quot; class=&quot;headerlink&quot; title=&quot;下载ClashX&quot;&gt;&lt;/a&gt;下载ClashX&lt;/h1&gt;&lt;p&gt;在&lt;a href=&quot;https://github.com/yichengchen/clashX/releases&quot;&gt;Clash官方Github&lt;/a&gt;中下载&lt;/p&gt;
&lt;h1 id=&quot;下载配置文件模版&quot;&gt;&lt;a href=&quot;#下载配置文件模版&quot; class=&quot;headerlink&quot; title=&quot;下载配置文件模版&quot;&gt;&lt;/a&gt;下载配置文件模版&lt;/h1&gt;&lt;p&gt;在&lt;a href=&quot;https://v2raytech.com/clash_template2.yaml&quot;&gt;https://v2raytech.com/clash_template2.yaml&lt;/a&gt;下载配置文件模版，修改模版中V2Ray相关配置&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# VMess&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- name: &amp;quot;v2ray&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: vmess&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  server: 233.233.233.233  &amp;#x2F;&amp;#x2F;需要修改&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  port: 233  &amp;#x2F;&amp;#x2F;需要修改&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  uuid: 1ebf343d-5979-40ec-a3c5-bd3863680suc  &amp;#x2F;&amp;#x2F;需要修改&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  alterId: 64  &amp;#x2F;&amp;#x2F;需要修改&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  cipher: auto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # udp: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # tls: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # skip-cert-verify: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # network: ws&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # ws-path: &amp;#x2F;path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # ws-headers: #这一行后面不要写东西&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #   Host: v2ray.com # 填你的主机名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://octopusheep.com/categories/Programming/"/>
    
    
    <category term="V2Ray" scheme="http://octopusheep.com/tags/V2Ray/"/>
    
  </entry>
  
  <entry>
    <title>在vultr服务器上部署V2Ray</title>
    <link href="http://octopusheep.com/2020/10/26/%E5%9C%A8vultr%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2V2Ray/"/>
    <id>http://octopusheep.com/2020/10/26/%E5%9C%A8vultr%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2V2Ray/</id>
    <published>2020-10-25T20:00:14.000Z</published>
    <updated>2020-10-25T12:02:27.375Z</updated>
    
    
    <summary type="html">&lt;p&gt;首先得有一台vultr服务器，或者其他国外运营商的云服务器&lt;/p&gt;
&lt;h2 id=&quot;SSH登陆云服务器&quot;&gt;&lt;a href=&quot;#SSH登陆云服务器&quot; class=&quot;headerlink&quot; title=&quot;SSH登陆云服务器&quot;&gt;&lt;/a&gt;SSH登陆云服务器&lt;/h2&gt;&lt;p&gt;在Terminals中使用ssh命令登陆服务器&lt;/p&gt;
&lt;h2 id=&quot;安装依赖包&quot;&gt;&lt;a href=&quot;#安装依赖包&quot; class=&quot;headerlink&quot; title=&quot;安装依赖包&quot;&gt;&lt;/a&gt;安装依赖包&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apt install curl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;安装V2Ray&quot;&gt;&lt;a href=&quot;#安装V2Ray&quot; class=&quot;headerlink&quot; title=&quot;安装V2Ray&quot;&gt;&lt;/a&gt;安装V2Ray&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bash &amp;lt;(curl -sL https:&amp;#x2F;&amp;#x2F;raw.githubusercontent.com&amp;#x2F;hijkpw&amp;#x2F;scripts&amp;#x2F;master&amp;#x2F;goV2.sh)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&quot;查看V2Ray配置文件&quot;&gt;&lt;a href=&quot;#查看V2Ray配置文件&quot; class=&quot;headerlink&quot; title=&quot;查看V2Ray配置文件&quot;&gt;&lt;/a&gt;查看V2Ray配置文件&lt;/h2&gt;&lt;p&gt;安装完成后，配置文件为&lt;code&gt;/etc/v2ray/config.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;cat&lt;/code&gt;命令查看配置文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;#x2F;etc&amp;#x2F;v2ray&amp;#x2F;config.json&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://octopusheep.com/categories/Programming/"/>
    
    
    <category term="V2Ray" scheme="http://octopusheep.com/tags/V2Ray/"/>
    
    <category term="Vultr" scheme="http://octopusheep.com/tags/Vultr/"/>
    
  </entry>
  
  <entry>
    <title>Terminals开启代理的方法</title>
    <link href="http://octopusheep.com/2020/10/21/Terminals%E5%BC%80%E5%90%AF%E4%BB%A3%E7%90%86%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://octopusheep.com/2020/10/21/Terminals%E5%BC%80%E5%90%AF%E4%BB%A3%E7%90%86%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2020-10-20T23:46:31.000Z</published>
    <updated>2020-10-20T16:01:18.716Z</updated>
    
    
    <summary type="html">&lt;p&gt;利用Python抓取国外网站内容时，时常遇到终端不走socks5的问题，导致不能访问，需要做如下设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进入.zshrc文件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vi .zshrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;设置函数开启终端代理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;添加终端走代理的函数，注意&lt;code&gt;http_proxy&lt;/code&gt;参数不用修改，保持&lt;code&gt;http://127.0.0.1:1087&lt;/code&gt;即可&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# proxy list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function proxy_off()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unset http_proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unset https_proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unset ftp_proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unset rsync_proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo -e &amp;quot;已关闭代理&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function proxy_on() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        export no_proxy&amp;#x3D;&amp;quot;localhost,127.0.0.1,localaddress,.localdomain.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        export http_proxy&amp;#x3D;&amp;quot;http:&amp;#x2F;&amp;#x2F;127.0.0.1:1087&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        export https_proxy&amp;#x3D;$http_proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        export ftp_proxy&amp;#x3D;$http_proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        export rsync_proxy&amp;#x3D;$http_proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        export HTTP_PROXY&amp;#x3D;$http_proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        export HTTPS_PROXY&amp;#x3D;$http_proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        export FTP_PROXY&amp;#x3D;$http_proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        export RSYNC_PROXY&amp;#x3D;$http_proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo -e &amp;quot;已开启代理&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://octopusheep.com/categories/Programming/"/>
    
    
    <category term="Scraping" scheme="http://octopusheep.com/tags/Scraping/"/>
    
    <category term="Terminals" scheme="http://octopusheep.com/tags/Terminals/"/>
    
  </entry>
  
</feed>
